define("io.ox/mail/compose/sharing",["io.ox/backbone/views/extensible","io.ox/backbone/mini-views/common","io.ox/backbone/mini-views/dropdown","io.ox/core/extensions","io.ox/core/yell","gettext!io.ox/mail","settings!io.ox/mail","settings!io.ox/core","static/3rd.party/jquery-ui.min.js"],function(e,t,i,s,o,n,a,d){var l=function(e){var t,i=e.slice(0,e.length-1),s="";switch(e.slice(e.length-1,e.length)){case"m":s=n.format(n.ngettext("%1$d minute","%1$d minutes",i),i),t=6e4*i;break;case"h":s=n.format(n.ngettext("%1$d hour","%1$d hours",i),i),t=36e5*i;break;case"d":s=n.format(n.ngettext("%1$d day","%1$d days",i),i),t=864e5*i;break;case"w":s=n.format(n.ngettext("%1$d week","%1$d weeks",i),i),t=6048e5*i;break;case"M":s=n.format(n.ngettext("%1$d month","%1$d months",i),i),t=2592e6*i;break;case"y":s=n.format(n.ngettext("%1$d year","%1$d years",i),i),t=31536e6*i}return{label:s,value:t}};return s.point("io.ox/mail/compose/sharing").extend({id:"expire",index:100,render:function(){var e,i=[];_(a.get("compose/shareAttachments/expiryDates",[])).each(function(e){var t=l(e);i.push(t),this.sharingModel.get("expiryDate")||e!==a.get("compose/shareAttachments/defaultExpiryDate","")||this.sharingModel.set("expiryDate",t.value)}.bind(this)),a.get("compose/shareAttachments/requiredExpiration")||a.get("compose/shareAttachments/forceAutoDelete",!1)||(i.push({label:n("Never"),value:""}),this.sharingModel.get("expiryDate")||""!==a.get("compose/shareAttachments/defaultExpiryDate","")||this.sharingModel.set("expiryDate","")),e=new t.SelectView({model:this.sharingModel,name:"expiryDate",list:i,id:"expiration-select-box"}),this.dialogNode.append($('<label for="expiration-select-box">').text(n("Expiration")),e.render().$el)}},{index:200,render:function(){function e(){s.toggleClass("hidden",""===i.sharingModel.get("expiryDate"))}var i=this,s=new t.CustomCheckboxView({model:this.sharingModel,name:"autodelete",label:n("Delete files after expiration")}).render().$el;if(a.get("compose/shareAttachments/forceAutoDelete",!1))return s.prop("disabled",!0).addClass("disabled");this.listenTo(this.sharingModel,"change:expiryDate",e),e(),this.dialogNode.append(s)}},{id:"password",index:300,render:function(){function e(){if(o.get("usepassword"))return i.find("input").prop("disabled",!1);i.find("input").prop("disabled",!0)}var i,s,o=this.sharingModel;this.dialogNode.append($('<div class="password-wrapper">').append(new t.CustomCheckboxView({name:"usepassword",model:o,label:n("Use password")}).render().$el.addClass("use-password"),$('<label class="control-label sr-only">').text(n("Enter Password")).attr({for:s=_.uniqueId("share-password-label-")}),i=new t.PasswordViewToggle({name:"password",model:o,placeholder:n("Password"),autocomplete:!1}).render().$el.find("input").attr("id",s))),o.on("change:usepassword",e),e()}},{id:"notifications",index:400,render:function(){a.get("compose/shareAttachments/enableNotifications",!1)&&(this.notificationModel=new Backbone.Model({download:_(this.sharingModel.get("notifications")).contains("download"),expired:_(this.sharingModel.get("notifications")).contains("expired"),visit:_(this.sharingModel.get("notifications")).contains("visit")}),this.dialogNode.append($("<fieldset>").append($("<legend>").append($("<h2>").text(n("Email notifications"))),new t.CustomCheckboxView({model:this.notificationModel,name:"download",label:n("Receive notification when someone finished downloading file(s)")}).render().$el,new t.CustomCheckboxView({model:this.notificationModel,name:"expired",label:n("Receive notification when the link expires")}).render().$el,new t.CustomCheckboxView({model:this.notificationModel,name:"visit",label:n("Receive notification when someone accesses the file(s)")}).render().$el)),this.listenTo(this.notificationModel,"change",function(){this.sharingModel.set("notifications",_.allKeys(_(this.notificationModel.attributes).pick(function(e){return!0===e})))}))}}),e.extend({tagName:"div",className:"share-attachments",point:"io.ox/mail/compose/sharing",initialize:function(){var e=a.get("compose/shareAttachments/forceAutoDelete",!1),t=_.extend({language:d.get("language"),enabled:!1,autodelete:e},this.model.get("sharedAttachments"));e&&(t.autodelete=!0),a.get("compose/shareAttachments/requiredExpiration")&&(t.expiryDate=l(a.get("compose/shareAttachments/defaultExpiryDate","1w")).value),this.sharingModel=new Backbone.Model(t),this.listenTo(this.model.get("attachments"),"add remove reset change:size",this.updateVisibility),this.listenTo(this.model,"change:sharedAttachments",this.syncToSharingModel),this.listenTo(this.sharingModel,"change:enabled",this.updateVisibility),this.listenTo(this.sharingModel,"change:enabled",this.syncToMailModel)},updateVisibility:function(){this.optionsButton&&(!this.model.saving&&a.get("compose/shareAttachments/threshold",0)>0&&this.model.get("attachments").getSize()>a.get("compose/shareAttachments/threshold",0)&&!1===this.sharingModel.get("enabled")&&(o("info",n("Attachment file size too large. You have to use %1$s or reduce the attachment file size.",a.get("compose/shareAttachments/name"))),this.sharingModel.set("enabled",!0)),this.$el.toggle(!!this.model.get("attachments").getValidModels().length),this.optionsButton.toggleClass("hidden",!this.sharingModel.get("enabled")))},syncToSharingModel:function(){var e=this.model.get("sharedAttachments");a.get("compose/shareAttachments/forceAutoDelete",!1)&&(e.autodelete=!0),this.sharingModel.set(e)},syncToMailModel:function(){if(!this.sharingModel.get("enabled"))return this.model.set("sharedAttachments",{enabled:!1});var e=this.sharingModel.toJSON(),t=["usepassword"];this.sharingModel.get("usepassword")&&!_.isEmpty(this.sharingModel.get("password"))||t.push("password"),this.model.set("sharedAttachments",_.omit(e,t))},render:function(){return this.isRendered?this:(this.$el.append(new t.CustomCheckboxView({model:this.sharingModel,name:"enabled",label:n("Use %1$s",a.get("compose/shareAttachments/name"))}).render().$el,this.optionsButton=$('<button type="button" class="btn btn-link hidden">').text(n("Options")).on("click",_(this.openDialog).bind(this))),this.updateVisibility(),this.isRendered=!0,this)},openDialog:function(){var e=this,t=this.sharingModel.toJSON();require(["io.ox/backbone/views/modal"],function(i){new i({title:n("%1$s options",a.get("compose/shareAttachments/name")),width:400}).build(function(){e.dialogNode=this.$body,this.$el.addClass("share-attachments-view-dialog"),e.invoke("render")}).addCancelButton().addButton({action:"apply",label:n("Apply")}).on("apply",function(){e.syncToMailModel()}).on("cancel",function(){e.sharingModel.clear().set(t)}).open()})}})});