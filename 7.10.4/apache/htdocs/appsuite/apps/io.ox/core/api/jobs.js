define("io.ox/core/api/jobs",["io.ox/core/http"],function(a){"use strict";function e(a,e){_(a).each(function(a){try{a(e)}catch(a){ox.debug&&console.warn("Catched error inside callback, probably normal for quota error",a)}})}var n,c={},i={updateJobTimer:function(){if(0===_(c).size()&&n)return clearInterval(n),void(n=null);n||(n=setInterval(function(){i.getInfo(_(c).keys()).done(function(a){var n={};_(a).each(function(a){a.data.done&&(n[a.data.id]=c[a.data.id],delete c[a.data.id])}),i.updateJobTimer(),0!==_(n).size&&_(_(n).keys()).each(function(a){var c=n[a];i.get(c.id).done(function(a){a.error&&n[c.id].failCallback.length?e(n[c.id].failCallback,a):n[c.id].successCallback.length&&e(n[c.id].successCallback,a),i.trigger("finished:"+c.id,a),i.trigger("finished:"+c.showIn,a)}).fail(function(a){e(n[c.id].failCallback,a)})})})},6e4))},get:function(e){return e?a.GET({module:"jobs",params:{action:"get",id:e}}):$.when()},getInfo:function(e){return e=[].concat(e),_.isEmpty(e)?$.when():(a.pause(),_(e).each(function(e){a.GET({module:"jobs",params:{action:"info",id:e}})}),a.resume())},getAll:function(){return a.GET({module:"jobs",params:{action:"all"}}).done(function(a){_(a).each(function(a){i.addJob(_.extend({showIn:"infostore",successCallback:[function(){ox.trigger("refresh.all")}],failCallback:[function(){ox.trigger("refresh.all")}]},a))})})},cancelJob:function(e){return e=[].concat(e),_.isEmpty(e)?$.when():a.PUT({module:"jobs",params:{action:"cancel"},data:e}).then(function(){_(e).each(function(a){delete c[a]}),i.updateJobTimer()})},addJob:function(a){if(a){if(a.failCallback=[].concat(a.failCallback),a.successCallback=[].concat(a.successCallback),c[a.id])return c[a.id].failCallback=c[a.id].failCallback.concat(a.failCallback),void(c[a.id].successCallback=c[a.id].successCallback.concat(a.successCallback));c[a.id]=a,i.trigger("added:"+a.id,{job:c[a.id]}),i.trigger("added:"+a.showIn,{job:c[a.id]}),i.updateJobTimer()}},getCurrentList:function(a){return a?_(c).where({showIn:a}):c}};return _.extend(i,Backbone.Events),i});