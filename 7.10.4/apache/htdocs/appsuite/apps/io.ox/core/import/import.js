define("io.ox/core/import/import",["io.ox/backbone/mini-views/common","io.ox/core/extensions","io.ox/backbone/views/modal","io.ox/core/tk/attachments","io.ox/core/folder/api","io.ox/core/api/import","io.ox/core/notifications","gettext!io.ox/core"],function(e,t,o,r,i,a,n,l){"use strict";t.point("io.ox/core/import").extend({id:"select",index:100,render:function(o){o.module=this.model.get("module");var r=o.list=[],i=_.uniqueId("select-");t.point("io.ox/core/import/format").invoke("customize",r,o),0!==r.length&&(this.model.set("format",r[0].value),1!==r.length&&this.$body.append($('<div class="form-group">').append($("<label>").attr("for",i).text(l("Format")),new e.SelectView({id:i,name:"format",list:r,model:this.model}).render().$el.attr("aria-label",l("select format")))))}}),t.point("io.ox/core/import/format").extend({id:"ical",index:100,customize:function(e){/^(calendar|tasks)$/.test(e.module)&&this.push({value:"ICAL",label:l("Calendar"),accept:".ics,.ical"})}}),t.point("io.ox/core/import/format").extend({id:"vcard",index:200,customize:function(e){/^(contacts)$/.test(e.module)&&this.push({value:"VCARD",label:l("vCard"),accept:".vcard,.vcf"})}}),t.point("io.ox/core/import/format").extend({id:"csv",index:300,customize:function(e){/^(contacts)$/.test(e.module)&&this.push({value:"CSV",label:l("CSV"),accept:".csv"})}}),t.point("io.ox/core/import").extend({id:"file",index:200,render:function(e){function t(t,o){var r=_.find(e.list,{value:o});return r&&r.accept?a.attr("accept",r.accept):a.removeAttr("accept")}var o,i=$('<span class="filename">').css("margin-left","7px");this.$body.append(o=r.fileUploadWidget({multi:!1,buttontext:l("Upload file")}).append(i).addClass("form-group"));var a=this.$fileUploadInput=o.find('input[type="file"]');a.on("change",function(e){e.preventDefault();var t="";a[0].files&&a[0].files.length>0&&(t=a[0].files[0].name),i.text(t)}),e.model.on("change:format",t),t(e.model,e.model.get("format"))}}),t.point("io.ox/core/import").extend({id:"foldername",index:300,render:function(t){/^(calendar)$/.test(t.module)&&(t.model.get("folderId")||(this.model.set("folderName",l("Imported calendar")),this.$body.append($('<div class="form-group">').append(e.getInputWithLabel("folderName",l("New calendar name"),this.model)))))}}),t.point("io.ox/core/import").extend({id:"checkbox",index:400,render:function(t){"calendar"!==t.module&&"tasks"!==t.module||this.$body.append(new e.CustomCheckboxView({name:"ignoreUuids",model:this.model,label:l("calendar"===t.module?"Ignore existing appointments":"Ignore existing events")}).render().$el)}}),t.point("io.ox/core/import").extend({id:"help",index:500,render:function(e){"contacts"===e.module&&this.$body.append($('<div class="help-block">').append($("<b>").text(l("Note on CSV files:")),$.txt(" "),$("<span>").text(l("The first record of a valid CSV file must define proper column names. Supported separators are comma and semi-colon.")),$.txt(" "),$('<a href="" target="help" style="white-space: nowrap">').attr("href","help/l10n/"+ox.language+"/ox.appsuite.user.sect.contacts.manage.import.html").text(l("Learn more"))))}}),t.point("io.ox/core/import").extend({id:"calendar-help-block",index:600,render:function(e){"calendar"===e.module&&this.$body.append($('<div class="help-block">').append(l("Ignoring existing appointments is helpful to import public holiday calendars, for example."),$.txt(" "),l("Please note that other participants are removed on calendar import.")))}});var d={calendar:"ox.appsuite.user.sect.calendar.manage.import.html","calendar:folderImport":"ox.appsuite.user.sect.calendar.folder.import.html",contacts:"ox.appsuite.user.sect.contacts.manage.import.html",tasks:"ox.appsuite.user.sect.tasks.manage.import.html"};return{show:function(e,r){new o({focus:"calendar"===e?'input[name="file"]':'select[name="format"]',async:!0,help:"calendar"!==e||r?d[e]:d["calendar:folderImport"],point:"io.ox/core/import",title:l("Import from file"),model:new Backbone.Model({folderId:r,module:e})}).inject({createFolder:function(e,o){var r=!1,a=i.getDefaultFolder(e);return t.point("io.ox/core/filename").invoke("validate",null,o,"folder").find(function(e){if(!0!==e)return n.yell("warning",e),r=!0}),r?$.Deferred().reject():i.create(a,{title:$.trim(o),module:"calendar"===e?"event":e}).fail(n.yell)},getFolder:function(){return r?i.get(r):this.createFolder(e,this.model.get("folderName"))},getDefaultFailMessage:function(){switch(e){case"contacts":return l("There was no contact data to import");case"tasks":return l("There was no task data to import");default:return l("There was no appointment data to import")}},onPartialFail:function(t){var o;o=_.isArray(t)?(t=_(t).chain().map(function(e){return(e||{}).error}).compact().value()).length?t.join("\n\n"):this.getDefaultFailMessage(e):t.error,n.yell({type:"error",message:o,duration:-1}),this.close()},onCompleteFail:function(e){if(!r&&this.tempFolder&&"calendar"===this.model.get("module")){var t=this.tempFolder.folder_id;i.remove(this.tempFolder.id).then(function(){i.pool.unfetch(t),i.refresh()})}this.onPartialFail(e)}}).addCancelButton().addButton({action:"import",label:l("Import")}).on("import",function(){var t=this,o=this.$fileUploadInput;return""===o.val()?(n.yell("error",l("Please select a file to import")),void this.idle()):"ICAL"!==this.model.get("format")||/\.(ical|ics)$/i.test(o.val())?r||this.model.get("folderName")?void this.getFolder().then(function(e){return t.tempFolder=e,a.importFile({file:o[0].files?o[0].files[0]:[],form:t.form,type:t.model.get("format"),ignoreUIDs:t.model.get("ignoreUuids"),folder:e.id})},function(e){n.yell(e)}).then(function(o){if(!o)return t.idle();var r,a=_.filter(o,function(e){return e&&e.error});try{require(["io.ox/"+e+"/api"],function(e){e.caches&&e.caches.all.grepRemove?e.caches.all.grepRemove(t.tempFolder.id+e.DELIM).done(function(){e.trigger("refresh.all:import")}):e.refresh&&(e.pool&&e.pool.gc(),e.refresh())}),i.reload(t.tempFolder)}catch(e){ox.debug&&console.warn("import triggering global refresh because of unknown API",e),ox.trigger("refresh^")}0===a.length?(n.yell("success",l("Data imported successfully")),i.refresh()):o.length===a.length?(r={error:l("Failed to import any data")},t.onCompleteFail([].concat(r,a))):(r={error:l("Data only partially imported (%1$s of %2$s records)",o.length-a.length,o.length)},t.onPartialFail([].concat(r,a)),i.refresh()),t.close()},this.onCompleteFail.bind(this)):(n.yell("error",l("You must enter a folder name")),this.idle()):(n.yell("error",l("Please select a valid iCal File to import")),void this.idle())}).open()}}});