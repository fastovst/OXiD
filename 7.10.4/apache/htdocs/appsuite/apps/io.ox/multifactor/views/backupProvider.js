define("io.ox/multifactor/views/backupProvider",["io.ox/backbone/views","io.ox/core/extensions","io.ox/backbone/mini-views","io.ox/backbone/views/modal","gettext!io.ox/core/boot","io.ox/multifactor/views/constants"],function(e,n,r,t,o,i){"use strict";function a(e,n){return new t({async:!0,point:h,title:i.AuthenticationTitle,width:640,enter:"OK",className:i.AuthDialogClass,model:new Backbone.Model({provider:n.providerName,deviceId:n.device.id,challenge:e,error:n.error})}).build(function(){}).addButton({label:i.OKButton,action:"OK"}).addCancelButton().on("cancel",function(){p.reject()}).addAlternativeButton({label:o("Upload Recovery File"),action:"Upload"}).on("OK",function(){var e=l();if(e&&""!==e){var r={response:e,id:n.device.id,provider:n.providerName};p.resolve(r)}else p.reject();u&&u.close()}).on("open",function(){$("#verification").focus()}).on("Upload",function(){v().then(function(e){var r={response:e,id:n.device.id,provider:n.providerName};p.resolve(r),u.close()})}).open()}function c(e){var n=$(e.currentTarget);if(n.val().length>4&&n.val(n.val().substring(0,4)),4===n.val().length){var r=$(".recoveryInput"),t=r.index(n),o=r.eq(t+1).length?r.eq(t+1):r.eq(0);r.eq(t).val(r.eq(t).val().toUpperCase()),o.focus()}}function l(){var e="";return $(".recoveryInput").each(function(){e+=$(arguments[1]).val()}),f=e,e}function d(e){try{var n=e.originalEvent.clipboardData.getData("text");n.length>4&&(e.preventDefault(),s(n))}catch(e){console.error(e)}}function s(e){var n,r=$(".recoveryInput"),t=0;for(n=0;n<r.length;n++)r.eq(n).val("");n=0,Array.from(e).forEach(function(e){" "!==e&&(r.eq(n).val(r.eq(n).val()+e),4==++t&&(t=0,n++))})}function v(){var e=$.Deferred(),n=$('<input type="file" name="file" class="file">').css("display","none").on("change",function(){if(this.files&&this.files[0]){var n=new FileReader;n.addEventListener("load",function(n){e.resolve(n.target.result)}),n.readAsBinaryString(this.files[0])}else e.reject()});return $(".recoveryDiv").append(n),n.click(),e}var u,p,f,h="multifactor/views/backupProvider",b=0;return n.point(h).extend({index:b+=100,id:"header",render:function(){var e=$("<label>").append(o("Please enter the recovery code")).append("<br>");this.$body.append(e)}},{index:b+=100,id:"selection",render:function(e){var n=e.model.get("challenge"),r=parseInt(n.backupStringLength,10);0===r&&(r=32);for(var t=r/4,i=$('<div class="recoveryDiv">'),a=0;a<t;a++){var l=$('<input type="text" id="code-'+a+'" class="recoveryInput" aria-label="'+o("Next 4 characters of the backup string")+'">').keyup(c).on("paste",d);i.append(l)}this.$body.append(i)}},{index:b+=100,id:"error",render:function(e){var n=e.model.get("error");if(n&&n.text){var r=$('<label class="multifactorError">').append(n.text);this.$body.append(r),f&&console.log(f)}}}),{open:function(e,n){return u=a(e,n),p=n.def,f&&s(f),u}}});