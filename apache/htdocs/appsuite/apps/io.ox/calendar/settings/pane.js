define("io.ox/calendar/settings/pane",["io.ox/core/extensions","io.ox/backbone/views/extensible","io.ox/backbone/mini-views","io.ox/backbone/mini-views/alarms","io.ox/core/settings/util","settings!io.ox/calendar","io.ox/core/capabilities","gettext!io.ox/calendar","io.ox/core/folder/api"],function(e,t,i,n,a,r,o,d,s){"use strict";e.point("io.ox/calendar/settings/detail").extend({index:100,id:"view",draw:function(){this.append(new t({point:"io.ox/calendar/settings/detail/view",model:r}).inject({getIntervalOptions:function(){return[5,10,15,20,30,60].map(function(e){return e=String(e),{label:d("%1$d minutes",e),value:e}})},getTimeOptions:function(){for(var e=[],t=moment().startOf("day"),i=0;i<24;i++)e.push({label:t.format("LT"),value:String(i)}),t.add(1,"hour");return e},getWeekDays:function(){return _(new Array(7)).map(function(e,t){var i=moment().weekday(t);return{value:i.day(),label:i.format("dddd")}})},getWeekLength:function(){return _(new Array(7)).map(function(e,t){return{value:t+1,label:d.format(d.ngettext("%1$d day","%1$d days",t+1),t+1)}})}}).build(function(){this.listenTo(r,"change",function(){r.saveAndYell()})}).render().$el)}});var l=0;e.point("io.ox/calendar/settings/detail/view").extend({id:"header",index:l+=100,render:function(){this.$el.addClass("io-ox-calendar-settings").append(a.header(d.pgettext("app","Calendar")))}},{id:"buttons",index:l+=100,render:function(e){this.$el.append(e.branch("buttons",null,$('<div class="form-group buttons">')))}},{id:"view",index:l+=100,render:function(){this.$el.append(a.fieldset(d.pgettext("noun","View"),$('<div class="form-group row">').append($('<div class="col-md-4">').append($('<label for="settings-startTime">').text(d("Start of working time")),new i.SelectView({id:"settings-startTime",name:"startTime",model:r,list:this.getTimeOptions()}).render().$el),$('<div class="col-md-4">').append($('<label for="settings-endTime">').text(d("End of working time")),new i.SelectView({id:"settings-endTime",name:"endTime",model:r,list:this.getTimeOptions()}).render().$el),$('<div class="col-md-4">').append($('<label for="settings-interval">').text(d("Time scale")),new i.SelectView({id:"settings-interval",name:"interval",model:r,list:this.getIntervalOptions()}).render().$el)),$('<div class="form-group">').append(a.checkbox("showDeclinedAppointments",d("Show declined appointments"),r))))}},{id:"birthday",index:l+=100,render:function(){function e(){return t?s.get(t):s.flat({module:"event",all:!0}).then(function(e){e=_(e).chain().values().flatten().value();var i=_(e).findWhere({"com.openexchange.calendar.provider":"birthdays"});if(!i)throw new Error("Cannot find birthdays folder");return t=i.id,i})}var t;return function(){if(o.has("calendar_birthdays")){var i,n=new Backbone.Model({birthday:void 0}),r=a.checkbox("birthday",d("Show birthday calendar"),n),l=r.data("view");r.css("visibility","hidden"),e().then(function(e){r.css("visibility",""),i.idle(),n.set("birthday",!!e.subscribed)},function(){i.remove()}),l.listenTo(n,"change:birthday",_.debounce(function(e){if(!_.isUndefined(e.previous("birthday"))){s.update(t,{subscribed:!!e.get("birthday")});var i=ox.ui.apps.get("io.ox/calendar");i&&i.folders&&i.folders[e.get("birthday")?"add":"remove"](t)}},500)),this.$el.append(i=a.fieldset(d("Birthday calendar"),$('<div class="form-group">').append(r)).busy())}}}()},{id:"workweek",index:l+=100,render:function(){this.$el.append(a.fieldset(d("Workweek view"),$('<div class="form-group row">').append($('<div class="col-md-4">').append($('<label for="settings-workweekStart">').text(d("Week start")),new i.SelectView({id:"settings-workweekStart",name:"workweekStart",model:r,list:this.getWeekDays(),integer:!0}).render().$el),$('<div class="col-md-4">').append($('<label for="settings-numDaysWorkweek">').text(d("Workweek length")),new i.SelectView({id:"settings-numDaysWorkweek",name:"numDaysWorkweek",model:r,list:this.getWeekLength(),integer:!0}).render().$el))))}},{id:"New",index:l+=100,render:function(){this.$el.append(a.fieldset(d("New appointment"),$('<div class="form-group">').append($("<label>").text(d("Default reminder")),new n.linkView({model:r,attribute:"chronos/defaultAlarmDateTime"}).render().$el),$('<div class="form-group">').append($("<label>").text(d("Default reminder for all-day appointments")),new n.linkView({model:r,attribute:"chronos/defaultAlarmDate"}).render().$el),o.has("calendar_birthdays")?$('<div class="form-group">').append($("<label>").text(d("Default reminder for appointments in birthday calendar")),new n.linkView({model:r,attribute:"birthdays/defaultAlarmDate"}).render().$el):"",a.checkbox("markFulltimeAppointmentsAsFree",d("Mark all day appointments as free"),r),a.checkbox("chronos/allowAttendeeEditsByDefault",d("Participants can edit appointments"),r)))}},{id:"notifications",index:l+=100,render:function(){this.$el.append(a.fieldset(d("Email notifications"),$('<div class="form-group">').append(a.checkbox("notifyNewModifiedDeleted",d("Receive notifications when an appointment in which you participate is created, modified or deleted"),r),a.checkbox("notifyAcceptedDeclinedAsCreator",d("Receive notification as appointment creator when participants accept or decline"),r),a.checkbox("notifyAcceptedDeclinedAsParticipant",d("Receive notification as appointment participant when other participants accept or decline"),r),a.checkbox("deleteInvitationMailAfterAction",d("Automatically delete the invitation email after the appointment has been accepted or declined"),r))))}}),e.point("io.ox/calendar/settings/detail/view/buttons").extend({id:"shared-calendars",index:100,render:function(){this.append($('<button type="button" class="btn btn-default" data-action="subscribe-shared-calendars">').append($.txt(d("Subscribe shared calendars"))).on("click",function(){require(["io.ox/calendar/actions/subscribe-shared"],function(e){e.open()})}))}})});