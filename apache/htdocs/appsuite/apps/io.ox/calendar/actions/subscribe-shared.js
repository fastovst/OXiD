define("io.ox/calendar/actions/subscribe-shared",["io.ox/core/extensions","gettext!io.ox/calendar","io.ox/core/folder/api","io.ox/backbone/views/modal","io.ox/backbone/mini-views","io.ox/core/http","less!io.ox/calendar/actions/subscribe-shared"],function(e,a,t,d,n,i){"use strict";function o(e){e.dialog.calendarData=e.calendarData,e.dialog.hash=e.hash,s(e)}function s(a){a.dialog.on("subscribe",function(){a.dialog.close(),i.pause(),_.each(a.hash,function(e,a){t.update(a,e)}),i.resume()}),e.point("io.ox/core/folder/subscribe-shared-calendar").invoke("render",a.dialog),a.dialog.idle(),a.dialog.$body.find('input[type="checkbox"]:enabled').first().focus()}function r(e,a,t){var d=[],n=Backbone.Model.extend({});return _.each(e,function(e){if(e["com.openexchange.calendar.extendedProperties"]){var i=new l({model:new n(e),dialog:a}).render().$el;"private"===t&&i.find('[name="subscribed"]').prop("disabled",!0).attr("data-state","manual"),d.push(i)}}),d}function c(e){return $.when(t.flat({module:"calendar",all:!0})).then(function(a){var t={},d=["private","public","shared","hidden"];return _.each(d,function(e){_.isEmpty(a[e])||(t[e]=a[e])}),{dialog:e,hash:{},calendarData:t}},function(a){e.idle(),e.$body.append($('<div class="alert alert-warning">').text(a.error_desc)),e.$footer.find('button[data-action="subscribe"]').prop("disabled",!0)})}var l=Backbone.View.extend({tagName:"li",className:"list-group-item",initialize:function(e){var a=this;this.opt=_.extend({},e),this.model.on("change:subscribed",function(e,t){if(a.opt.dialog.hash[this.get("id")]||(a.opt.dialog.hash[this.get("id")]={}),a.opt.dialog.hash[this.get("id")].subscribed=this.get("subscribed"),!t){var d=_.copy(a.model.get("com.openexchange.calendar.extendedProperties"),!0);d.usedForSync.value="false",a.model.set("com.openexchange.calendar.extendedProperties",d),a.model.trigger("change:com.openexchange.calendar.extendedProperties")}}),this.model.on("change:com.openexchange.calendar.extendedProperties",function(){a.opt.dialog.hash[this.get("id")]||(a.opt.dialog.hash[this.get("id")]={}),a.opt.dialog.hash[this.get("id")]["com.openexchange.calendar.extendedProperties"]=this.get("com.openexchange.calendar.extendedProperties")})},render:function(){var e,t=_.copy(this.model.attributes["com.openexchange.calendar.extendedProperties"],!0);t.usedForSync.value="true";var d=_.copy(this.model.attributes["com.openexchange.calendar.extendedProperties"],!0);d.usedForSync.value="false";var i=n.SwitchView.extend({update:function(){var e=this.$el.closest(".list-group-item"),a=e.find('input[name="com.openexchange.calendar.extendedProperties"]');this.model.get("subscribed")?(a.prop("disabled",!1),e.removeClass("disabled")):(a.prop("disabled",!0).attr("data-state","manual"),e.addClass("disabled")),this.$input.prop("checked",this.setValue())}});return this.$el.append(new i({name:"subscribed",model:this.model,label:""}).render().$el.attr("title",a("subscribe to calendar")),$('<div class="item-name">').append($("<div>").text(this.model.attributes.display_title||this.model.attributes.title)),e=new n.CustomCheckboxView({name:"com.openexchange.calendar.extendedProperties",model:this.model,label:a("Sync via DAV"),customValues:{true:t,false:d}}).render().$el.attr("title",a("sync via DAV"))),this.model.get("subscribed")&&!d.usedForSync.protected||e.addClass("disabled").find('input[name="com.openexchange.calendar.extendedProperties"]').prop("disabled",!0).attr("data-state","manual"),this}});return e.point("io.ox/core/folder/subscribe-shared-calendar").extend({id:"sections",index:200,render:function(){var e=this,t={public:a("Public calendars"),shared:a("Shared calendars"),private:a("Private"),hidden:a("Hidden calendars")};_.each(this.calendarData,function(a,d){e.$body.append($('<div class="item-block">').append($("<h4>").text(t[d]),$('<ol class="list-group">').append(r(a,e,d))))})}}),{open:function(){var e=new d({top:60,width:600,center:!1,maximize:!0,help:"ox.appsuite.user.sect.calendar.folder.usedforsync.html",async:!0,point:"io.ox/core/folder/subscribe-shared-calendar",title:a("Subscribe shared calendars"),render:!1});return e.addCancelButton().addButton({label:a("Save"),action:"subscribe"}).build(function(){this.$body.addClass("shared-calendars")}).busy(!0).open(),c(e).then(o)}}});