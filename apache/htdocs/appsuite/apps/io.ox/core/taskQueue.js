define("io.ox/core/taskQueue",function(){"use strict";function t(n){var i=$.Deferred(),s=this;_.extend(this,n),this.state="initial",this.start=function(t){if("invalidated"!==this.state)return"done"===this.state&&this.nextTask?(t&&this.nextTask.start(!0),i):"initial"!==this.state?i:(this.state="running",n.perform().always(function(){s.state="done",s.result=$.makeArray(arguments),i.resolve.apply(i,s.result),t&&s.nextTask&&s.nextTask.start(!0)}),i)},this.invalidate=function(){this.state="invalidated"},this.when=function(){return i},this.chainTask=function(n){return this.nextTask=new t(n)},this.destroy=function(){this.invalidate(),this.next=null,this.result=null}}return{Task:t,Queue:function(){var n={},i=1,s=null,e=null,r="stopped";this.enqueue=function(a){var u="running"===r;a.id||(a.id=i,i+=1),s?(u="running"===r&&"done"===e.state,e=e.chainTask(a)):(s=new t(a),e=s),n[a.id]=e,u&&e.start(!0)},this.fasttrack=function(t){if(n[t])return n[t].start();throw new Error("Unknown TaskId "+t)},this.get=function(t){return n[t]},this.when=function(t){if(n[t])return n[t].when();throw new Error("Unknown TaskId "+t)},this.start=function(){r="running",s&&s.start(!0)},this.destroy=function(){_(n).invoke("destroy")},this.tasks=function(){return _(n)}}}});