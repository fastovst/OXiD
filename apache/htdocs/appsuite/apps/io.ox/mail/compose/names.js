define("io.ox/mail/compose/names",["io.ox/mail/sender","io.ox/backbone/views/modal","io.ox/backbone/mini-views/common","settings!io.ox/mail","gettext!io.ox/mail"],function(e,t,n,i,o){"use strict";var a={},s=Backbone.View.extend({className:"form-group",initialize:function(){this.listenTo(this.model,"change:overwrite",function(){var e=this.model.get("overwrite"),t=e?"":this.model.get("defaultName"),n=this.$('input[name="name"]');n.attr("placeholder",t).prop("disabled",!e),e?n.val(this.model.get("name")).focus():n.val("")})},render:function(){return this.$el.append($("<h5>").text(this.model.id),$('<div class="input-group">').append($('<span class="input-group-addon">').append(this.renderCheckbox()),this.renderField())),this},renderCheckbox:function(){return new n.CheckboxView({name:"overwrite",model:this.model}).render().$el.attr("title",o("Use custom name")).prop("checked",this.model.get("overwrite"))},renderField:function(){var e=this.model.get("overwrite"),t=e?"":this.model.get("defaultName");return new n.InputView({name:"name",model:this.model}).render().$el.attr("title",o("Custom name")).attr("placeholder",t).prop("disabled",!e).val(e?this.model.get("name"):"")}}),l=Backbone.View.extend({render:function(){return this.$el.append($('<div class="help-block">').css("margin","0 0 1em 0").text(o("Select a checkbox to define a custom name for that address; otherwise the mail account's default name will be used. If you want to use an address anonymously, select the checkbox and leave the field empty.")),this.collection.map(function(e){return new s({model:e}).render().$el})),this},save:function(){var e={};this.collection.each(function(t){e[t.id]=t.pick("name","overwrite","defaultName")}),i.set("customDisplayNames",e).save(),ox.trigger("change:customDisplayNames")}}),r=Backbone.Model.extend({constructor:function(e){Backbone.Model.call(this,{id:e,defaultName:a[e],overwrite:i.get(["customDisplayNames",e,"overwrite"],!1),name:i.get(["customDisplayNames",e,"name"],"")})}}),d=Backbone.Collection.extend({model:r});return{EditRealNamesView:l,NameView:s,open:function(){e.getAddresses().done(function(e,n){var i=_([].concat([n],e)).chain().map(function(e){return a[e[1]]=e[0],e[1]}).uniq().value();new t({title:o("Edit real names")}).build(function(){this.view=new l({collection:new d(i),el:this.$body.get(0)}),this.view.render()}).addCancelButton().addButton({label:o("Save"),action:"save"}).on("save",function(){this.view.save(),this.view=null}).open()})}}});